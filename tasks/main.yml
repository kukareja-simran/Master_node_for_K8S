---
# tasks file for master_node
- name: Configuring YUM Repo For K8S Services
  yum_repository:
    name: kubernetes
    description: kubernetes repo
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-\$basearch
    gpgcheck: 1
    repo_gpgcheck: 1
    enabled: 1
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  register: a
- debug:
        var: a

- name: Installing k8s softwares for master
  package:
    name: "{{ item }}"
    state: present
  loop:
    - kubeadm
    - iproute-tc
    - docker
  register: b
- debug:
        var: b

- name: Enableling  Services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  loop:
    - kubelet
    - docker
  register: c
- debug:
        var: c

- name: Pulling Required K8S Images For Master Node
  command: kubeadm config images pull
  register: d
- debug:
        var: d


- name: Changing CGROUP Driver of Docker
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"]
      }
  register: e
- debug:
        var: e

- name: Restart Docker service
  service:
          name: docker
          state: restarted
  register: f
- debug:
        var: f

- name: Update config file for k8s
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  register: g
- debug:
        var: g

- name: restarting sysctl
  command: sysctl --system
  register: h
- debug:
        var: h

- name: Initializing Kubeadm Networking For K8S Cluster
  shell: "kubeadm init --pod-network-cidr={{ cidr }} --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: yes
  register: i
- debug:
        var: i

- name: Creating .kube Directory
  file:
    path: $HOME/.kube
    state: directory
  register: j
- debug:
        var: j

- name: Copying Config File of K8S Master to HOME Location
  command: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
  register: k
- debug:
        var: k

- name: Changing Ownership of K8S Config File For K8S Kubectl Client
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"
  register: l
- debug:
        var: l

- name: setup overlay network using flannel plugin
  command: "kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"
  register: m
- debug:
        var: m

- name: Generating Token
  shell: "kubeadm token  create  --print-join-command"
  register: token
  ignore_errors: yes
- debug: 
    var: token.stdout_lines

 

